##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.2.0] date: [Wed May 22 05:07:40 EET 2019] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = CAR_canbus


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -O0


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Src/main.c \
Src/stm32f4xx_it.c \
Src/stm32f4xx_hal_msp.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_spi.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c_ex.c \
A71CH/se_hostlib/common/smComSCI2C.c \
A71CH/se_hostlib/platform/i2c_F407.c \
A71CH/se_hostlib/platform/sm_printf.c \
A71CH/se_hostlib/common/sci2c.c \
A71CH/se_hostlib/common/smCom.c \
A71CH/a71ch/ex/ex_ecc_nohc.c \
A71CH/tst_a71ch_util.c \
A71CH/tst_sm_util.c \
A71CH/a71ch/src/a71ch_sst.c \
A71CH/a71ch/src/a71ch_com.c \
A71CH/a71ch/src/a71ch_crypto_derive.c \
A71CH/a71ch/src/a71ch_crypto_ecc.c \
A71CH/a71ch/src/a71ch_module.c \
A71CH/se_hostlib/common/sm_apdu.c \
A71CH/se_hostlib/common/scp.c \
A71CH/dwt_delay/dwt_delay.c \
A71CH/se_hostlib/common/sm_errors.c \
A71CH/libCommon/hostCrypto/hcAsn.c \
Src/system_stm32f4xx.c \
libs/eth-tx-builder/src/contract.c \
libs/eth-tx-builder/src/rlp.c \
libs/eth-tx-builder/src/transaction.c \
libs/eth-tx-builder/libs/trezor-crypto/address.c  \
libs/eth-tx-builder/libs/trezor-crypto/base32.c \
libs/eth-tx-builder/libs/trezor-crypto/base58.c \
libs/eth-tx-builder/libs/trezor-crypto/bignum.c \
libs/eth-tx-builder/libs/trezor-crypto/bip32.c \
libs/eth-tx-builder/libs/trezor-crypto/bip39.c \
libs/eth-tx-builder/libs/trezor-crypto/blake256.c \
libs/eth-tx-builder/libs/trezor-crypto/blake2b.c \
libs/eth-tx-builder/libs/trezor-crypto/blake2s.c \
libs/eth-tx-builder/libs/trezor-crypto/cash_addr.c \
libs/eth-tx-builder/libs/trezor-crypto/curves.c \
libs/eth-tx-builder/libs/trezor-crypto/ecdsa.c \
libs/eth-tx-builder/libs/trezor-crypto/groestl.c \
libs/eth-tx-builder/libs/trezor-crypto/hasher.c \
libs/eth-tx-builder/libs/trezor-crypto/hmac.c \
libs/eth-tx-builder/libs/trezor-crypto/memzero.c \
libs/eth-tx-builder/libs/trezor-crypto/nem.c \
libs/eth-tx-builder/libs/trezor-crypto/nist256p1.c \
libs/eth-tx-builder/libs/trezor-crypto/pbkdf2.c \
libs/eth-tx-builder/libs/trezor-crypto/rand.c \
libs/eth-tx-builder/libs/trezor-crypto/rc4.c \
libs/eth-tx-builder/libs/trezor-crypto/ripemd160.c \
libs/eth-tx-builder/libs/trezor-crypto/script.c \
libs/eth-tx-builder/libs/trezor-crypto/secp256k1.c \
libs/eth-tx-builder/libs/trezor-crypto/segwit_addr.c \
libs/eth-tx-builder/libs/trezor-crypto/sha2.c \
libs/eth-tx-builder/libs/trezor-crypto/sha3.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/curve25519-donna-32bit.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/curve25519-donna-helpers.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/curve25519-donna-scalarmult-base.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/ed25519.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/ed25519-donna-32bit-tables.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/ed25519-donna-basepoint-table.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/ed25519-donna-impl-base.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/ed25519-keccak.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/ed25519-sha3.c \
libs/eth-tx-builder/libs/trezor-crypto/ed25519-donna/modm-donna-32bit.c \
libs/eth-tx-builder/libs/tiny-bignum-c/bn.c



# ASM sources
ASM_SOURCES =  \
startup_stm32f407xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
GCC_PATH = /opt/gcc-arm-none-eabi-7-2018-q2-update/bin
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F407xx \
-DTGT_A71CH \
-DI2C \
-DSCP_MODE=C_MAC_C_ENC_R_MAC_R_ENC \
-DHOST_CRYPTO_NOT_SUPPORTED \
-DHOST_CRYPTO_ERROR \
-DHOST_CRYPTO_OK \
-DSECURE_CHANNEL_SUPPORTED=0 \
-DRAND_PLATFORM_INDEPENDENT \
-DUSE_RFC6979 \
-DEVAN_TESTNET
# AS includes
AS_INCLUDES =

# C includes
C_INCLUDES =  \
-IInc \
-IDrivers/STM32F4xx_HAL_Driver/Inc \
-IDrivers/STM32F4xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32F4xx/Include \
-IDrivers/CMSIS/Include \
-IA71CH/se_hostlib/common \
-IA71CH/se_hostlib/inc \
-IA71CH/se_hostlib/platform \
-IA71CH/a71ch/ex/ \
-IA71CH/a71ch/inc \
-IA71CH/api/inc \
-IA71CH \
-IA71CH/dwt_delay \
-IA71CH/libCommon/hostCrypto \
-Ilibs/eth-tx-builder/include \
-Ilibs/eth-tx-builder/libs/tiny-bignum-c \
-Ilibs/eth-tx-builder/trezor-crypto/ed25519_sign \
-Ilibs/eth-tx-builder/libs/trezor-crypto





# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F407VGTx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys
LIBDIR =
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
